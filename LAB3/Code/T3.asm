;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
; 1DT301, Computer Technology I
; Date: 2015-09-03
; Author:
; Student name 1
; Student name 2
;
; Lab number: 3
; Title: How to use interrupts
;
; Hardware: STK600, CPU ATmega2560
;
; Function: Describe the function of the program, so that you can understand it,
; even if you're viewing this in a year from now!
;
; Input ports: Describe the function of used ports, for example on-board switches
; connected to PORTA.
;
; Output ports: Describe the function of used ports, for example on-board LEDs
; connected to PORTB.
;
; Subroutines: If applicable.
; Included files: m2560def.inc
;
; Other information:
;
; Changes in program: (Description and date)
;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
.include "m2560def.inc"

.org 0x00
rjmp start

.org INT0addr
rjmp BlinkRight	

.org INT1addr       ;Initializing first Interrupt
rjmp normal

.org INT2addr
rjmp BlinkLeft

.org 0x72

start:
; Initialize SP, Stack Pointer
ldi r20, HIGH(RAMEND) ; R20 = high part of RAMEND address
out SPH,R20 ; SPH = high part of RAMEND address
ldi R20, low(RAMEND) ; R20 = low part of RAMEND address
out SPL,R20 ; SPL = low part of RAMEND address

ldi r20,0b00101010 ;Setting INT0-INT1-INT2 into falling edge
sts EICRA,r20
ldi r20,0b00000111 ;Enable INT0-INT1-INT2
out EIMSK,r20

ldi r17,0xFF	;Set PORTB as output
out DDRB, r17

ldi r17,0x00	;Set PORTD as input
out DDRD,r17

ldi r16, 0xFF	
out PORTB, r16
ldi r18,2
.def LED=r16
.def Normal_Right = r22
ldi Normal_Right, 0b11000000
.def Normal_Left = r21
ldi Normal_Left,0b00000011
sei	;Global interrupt enable


ldi r23, 1


Main:
	cpi r23, 1
	breq NLED			

	cpi r23, 2
	breq BLeft

	cpi r23, 3
	breq BRight


rjmp Main

NLED:
ldi LED, 0b00111100
out PORTB, LED
rjmp Main

BLeft: ;RING COUNTER

	SBIS PORTB,PINB7 ;If the LED7 is on then reset the LEDs otherwise skip the next line
		ldi LED,0b11101111
	SBIC PORTB,PINB7	;If the LED7 is not on then Rotate otherwise skip the next line 
		rol LED;Rotate to the left 
	mov r17,LED
	sbr r17, 0b00001111
	sub r17,Normal_Left
	out PORTB,r17	;output to PORTB to show the LEDs
	call Delay	;Delay of 0.5 sec
rjmp main


BRight:
	SBIS PORTB,PINB0 ;If the LED0 is on then reset the LEDs otherwise skip the next line
		ldi LED,0b11110111
	SBIC PORTB,PINB0	;If the LED0 is not on then Rotate otherwise skip the next line 
		ror LED	;Rotate to the left 
	mov r17,LED
	sbr r17, 0b11110000
	sub r17,Normal_Right
	out PORTB,R17	;output to PORTB to show the LEDs
	call Delay	;Delay of 0.5 sec
rjmp main


normal:
ldi r23, 1
RETI

BlinkLeft:
ldi r23, 2
ldi LED,0b11101111
RETI

BlinkRight:
ldi r23, 3
ldi LED,0b11110111
RETI

Delay:
; Generated by delay loop calculator
; at http://www.bretmulvey.com/avrdelay.html
; Delay 500 000 cycles
; 500ms at 1 MHz
    ldi  r18, 3
    ldi  r19, 138
    ldi  r20, 86
L1: dec  r20
    brne L1
    dec  r19
    brne L1
    dec  r18
    brne L1
    rjmp PC+1
RET